{
  "contractName": "LibraryDemo",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "toggleContractActive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "electricChargeAllowanceUSD",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "price",
          "type": "string"
        }
      ],
      "name": "LogNewElectricChargePrice",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "LogNewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_empId",
          "type": "uint256"
        },
        {
          "name": "_salary",
          "type": "uint256"
        }
      ],
      "name": "addEmployee",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_empId",
          "type": "uint256"
        },
        {
          "name": "_percent",
          "type": "uint256"
        }
      ],
      "name": "calulateBonus",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_empId",
          "type": "uint256"
        }
      ],
      "name": "addElectriCarAllowanceToSalary",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a22c9f8146100b45780630d7dc9af146100ff5780631385d24c1461014057806327dc297e1461015757806338bbfa50146101ce57806340b002f41461028b578063715018a6146102da5780638da5cb5b146102f1578063a2e6204514610348578063ba026be314610352578063f2fde38b1461037d575b600080fd5b3480156100c057600080fd5b506100e960048036038101908080359060200190929190803590602001909291905050506103c0565b6040518082815260200191505060405180910390f35b34801561010b57600080fd5b5061012a60048036038101908080359060200190929190505050610532565b6040518082815260200191505060405180910390f35b34801561014c57600080fd5b506101556106be565b005b34801561016357600080fd5b506101cc6004803603810190808035600019169060200190929190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506107d5565b005b3480156101da57600080fd5b506102896004803603810190808035600019169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506108f1565b005b34801561029757600080fd5b506102c060048036038101908080359060200190929190803590602001909291905050506108f6565b604051808215151515815260200191505060405180910390f35b3480156102e657600080fd5b506102ef610a43565b005b3480156102fd57600080fd5b50610306610bd5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610350610bfb565b005b34801561035e57600080fd5b50610367610d4d565b6040518082815260200191505060405180910390f35b34801561038957600080fd5b506103be600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d53565b005b600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600660149054906101000a900460ff16151561052b57600060086000868152602001908152602001600020600101541115156104e957600080fd5b6105256064610517856008600089815260200190815260200160002060010154610e4a90919063ffffffff16565b610e8290919063ffffffff16565b90508091505b5092915050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561061f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600660149054906101000a900460ff1615156106b9576000600860008481526020019081526020016000206001015411151561065a57600080fd5b6106856007546008600085815260200190815260200160002060010154610e9890919063ffffffff16565b6008600084815260200190815260200160002060010181905550600860008381526020019081526020016000206001015490505b919050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600660149054906101000a900460ff1615600660146101000a81548160ff021916908315150217905550565b60006107df610eb4565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561081857600080fd5b7fcc48fb02c95163c7d432173abb9f118896ba6f98fab9a10a59ad9bbc47a80c5e826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561087a57808201518184015260208101905061085f565b50505050905090810190601f1680156108a75780820380516001836020036101000a031916815260200191505b509250505060405180910390a16108bd82611216565b90506108e660166108d8600a84610e4a90919063ffffffff16565b610e4a90919063ffffffff16565b600781905550505050565b505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600660149054906101000a900460ff161515610a3d57604080519081016040528084815260200183815250600860008581526020019081526020016000206000820151816000015560208201518160010155905050600190505b92915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f621c2856e3b87f81235f8ac8a22bbb40a0142961960710d00b2b6c380902b57e6040518080602001828103825260368152602001807f4f7261636c697a65207175657279207761732073656e742c207374616e64696e81526020017f6720627920666f722074686520616e737765722e2e2e0000000000000000000081525060400191505060405180910390a1610d4a6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250608060405190810160405280604781526020017f786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f81526020017f77732f726573742f6675656c707269636573292e6675656c5072696365732e6581526020017f6c6563747269630000000000000000000000000000000000000000000000000081525061122a565b50565b60075481565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610e3e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b610e47816117d0565b50565b600080831415610e5d5760009050610e7c565b8183029050818382811515610e6e57fe5b04141515610e7857fe5b8090505b92915050565b60008183811515610e8f57fe5b04905092915050565b60008183019050828110151515610eab57fe5b80905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610f2657506000610f24600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118ca565b145b15610f3757610f3560006118d5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610fbd57600080fd5b505af1158015610fd1573d6000803e3d6000fd5b505050506040513d6020811015610fe757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561115057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110d457600080fd5b505af11580156110e8573d6000803e3d6000fd5b505050506040513d60208110156110fe57600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156111d657600080fd5b505af11580156111ea573d6000803e3d6000fd5b505050506040513d602081101561120057600080fd5b8101908080519060200190929190505050905090565b6000611223826000611d6d565b9050919050565b6000806000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061129e5750600061129c600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166118ca565b145b156112af576112ad60006118d5565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561133557600080fd5b505af1158015611349573d6000803e3d6000fd5b505050506040513d602081101561135f57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156114c857600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561144c57600080fd5b505af1158015611460573d6000803e3d6000fd5b505050506040513d602081101561147657600080fd5b8101908080519060200190929190505050600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611572578082015181840152602081019050611557565b50505050905090810190601f16801561159f5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156115be57600080fd5b505af11580156115d2573d6000803e3d6000fd5b505050506040513d60208110156115e857600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a76400000181111561161e57600060010291506117c9565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156116d65780820151818401526020810190506116bb565b50505050905090810190601f1680156117035780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b8381101561173c578082015181840152602081019050611721565b50505050905090810190601f1680156117695780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561178a57600080fd5b505af115801561179e573d6000803e3d6000fd5b50505050506040513d60208110156117b557600080fd5b810190808051906020019092919050505091505b5092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561180c57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000813b9050919050565b6000806118f5731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6118ca565b111561199757731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061198e6040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250612061565b60019050611d68565b60006119b673c03a2615d5efaf5f49f60b7bb6583eaec212fdf16118ca565b1115611a585773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611a4f6040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250612061565b60019050611d68565b6000611a7773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6118ca565b1115611b195773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b106040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250612061565b60019050611d68565b6000611b3873146500cfd35b22e4a392fe0adc06de1a1368ed486118ca565b1115611bda5773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611bd16040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250612061565b60019050611d68565b6000611bf9736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756118ca565b1115611c5d57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611d68565b6000611c7c7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6118ca565b1115611ce0577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611d68565b6000611cff7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6118ca565b1115611d63577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611d68565b600090505b919050565b6000606060008060008693506000925060009150600090505b83518110156120425760307f0100000000000000000000000000000000000000000000000000000000000000028482815181101515611dc157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191610158015611ed9575060397f0100000000000000000000000000000000000000000000000000000000000000028482815181101515611e6957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191611155b15611f8a578115611efc576000861415611ef257612042565b8580600190039650505b600a8302925060308482815181101515611f1257fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090040383019250612035565b602e7f0100000000000000000000000000000000000000000000000000000000000000028482815181101515611fbc57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561203457600191505b5b8080600101915050611d86565b60008611156120545785600a0a830292505b8294505050505092915050565b806003908051906020019061207792919061207b565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106120bc57805160ff19168380011785556120ea565b828001600101855582156120ea579182015b828111156120e95782518255916020019190600101906120ce565b5b5090506120f791906120fb565b5090565b61211d91905b80821115612119576000816000905550600101612101565b5090565b905600a165627a7a72305820c29bc9c3ece42e47a15afda8c87d9dd2b89d883448cc34c2af7b9c275a9e2fb00029",
  "sourceMap": "408:2671:1:-;;;261:5:0;238:28;;;;;;;;;;;;;;;;;;;;794:93:1;8:9:-1;5:2;;;30:1;27;20:12;5:2;794:93:1;575:10:10;567:5;;:18;;;;;;;;;;;;;;;;;;214:10:8;206:5;;:18;;;;;;;;;;;;;;;;;;829:8:1;:6;;;:8;;;:::i;:::-;408:2671;;1590:238;1638:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1725:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;;;:96;;;:::i;:::-;;1590:238::o;13972:306:7:-;14057:10;14078;11260:1;11254:3;;;;;;;;;;;11246:15;;;11245:49;;;;11292:1;11265:25;11285:3;;;;;;;;;;;11265:11;;;:25;;;:::i;:::-;:28;11245:49;11242:101;;;11308:35;10976:1;11308:19;;;:35;;;:::i;:::-;;11242:101;11378:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11378:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11378:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11378:16:7;;;;;;;;;;;;;;;;11357:37;;11365:8;;;;;;;;;;;11357:37;;;;11354:92;;;11429:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11429:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11429:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11429:16:7;;;;;;;;;;;;;;;;11408:8;;:38;;;;;;;;;;;;;;;;;;11354:92;14091:8;;;;;;;;;;;:17;;;14109:10;14091:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14091:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14091:29:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14091:29:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14091:29:7;;;;;;;;;;;;;;;;14078:42;;14164:6;14152:11;:18;14142:7;:28;14134:5;:36;14130:50;;;14179:1;14172:8;;;;;;14130:50;14224:8;;;;;;;;;;;:14;;;14245:5;14252:1;14255:10;14267:3;14224:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14224:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14224:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14224:47:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14224:47:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14224:47:7;;;;;;;;;;;;;;;;14217:54;;11457:1;13972:306;;;;;:::o;33893:150::-;33955:10;34021:5;34009:18;34000:27;;33986:51;;;:::o;11604:1764::-;11667:4;11742:1;11686:55;11698:42;11686:11;;;:55;;;:::i;:::-;:57;11682:245;;;11796:42;11768:3;;:71;;;;;;;;;;;;;;;;;;11853:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;11912:4;11905:11;;;;11682:245;11996:1;11940:55;11952:42;11940:11;;;:55;;;:::i;:::-;:57;11936:254;;;12058:42;12030:3;;:71;;;;;;;;;;;;;;;;;;12115:39;;;;;;;;;;;;;;;;;;;:23;;;:39;;;:::i;:::-;12175:4;12168:11;;;;11936:254;12259:1;12203:55;12215:42;12203:11;;;:55;;;:::i;:::-;:57;12199:249;;;12319:42;12291:3;;:71;;;;;;;;;;;;;;;;;;12376:36;;;;;;;;;;;;;;;;;;;:23;;;:36;;;:::i;:::-;12433:4;12426:11;;;;12199:249;12517:1;12461:55;12473:42;12461:11;;;:55;;;:::i;:::-;:57;12457:253;;;12579:42;12551:3;;:71;;;;;;;;;;;;;;;;;;12636:38;;;;;;;;;;;;;;;;;;;:23;;;:38;;;:::i;:::-;12695:4;12688:11;;;;12457:253;12779:1;12723:55;12735:42;12723:11;;;:55;;;:::i;:::-;:57;12719:201;;;12841:42;12813:3;;:71;;;;;;;;;;;;;;;;;;12905:4;12898:11;;;;12719:201;12989:1;12933:55;12945:42;12933:11;;;:55;;;:::i;:::-;:57;12929:200;;;13050:42;13022:3;;:71;;;;;;;;;;;;;;;;;;13114:4;13107:11;;;;12929:200;13198:1;13142:55;13154:42;13142:11;;;:55;;;:::i;:::-;:57;13138:202;;;13261:42;13233:3;;:71;;;;;;;;;;;;;;;;;;13325:4;13318:11;;;;13138:202;13356:5;13349:12;;11604:1764;;;;:::o;39316:118::-;39414:13;39390:21;:37;;;;;;;;;;;;:::i;:::-;;39316:118;:::o;408:2671:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "408:2671:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:261;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2366:261:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:295;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2777:295:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:220:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:220:0;;;;;;1127:394:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1127:394:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13483:69:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13483:69:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1978:199:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1978:199:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:10;;;;;;232:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1590:238:1;;;;;;513:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;513:38:1;;;;;;;;;;;;;;;;;;;;;;;1274:103:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:261:1;2469:7;2535:13;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:7:0;;;;;;;;;;;529:8;525:15;;;2523:1:1;2496:9;:17;2506:6;2496:17;;;;;;;;;;;:24;;;:28;2488:37;;;;;;;;2551:47;2594:3;2551:38;2580:8;2551:9;:17;2561:6;2551:17;;;;;;;;;;;:24;;;:28;;:38;;;;:::i;:::-;:42;;:47;;;;:::i;:::-;2535:63;;2615:5;2608:12;;525:15:0;2366:261:1;;;;;:::o;2777:295::-;2875:7;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:7:0;;;;;;;;;;;529:8;525:15;;;2929:1:1;2902:9;:17;2912:6;2902:17;;;;;;;;;;;:24;;;:28;2894:37;;;;;;;;2968:56;2997:26;;2968:9;:17;2978:6;2968:17;;;;;;;;;;;:24;;;:28;;:56;;;;:::i;:::-;2941:9;:17;2951:6;2941:17;;;;;;;;;;;:24;;:83;;;;3041:9;:17;3051:6;3041:17;;;;;;;;;;;:24;;;3034:31;;525:15:0;2777:295:1;;;:::o;272:220:0:-;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:7:0;;;;;;;;;;;477:8;467:7;;:18;;;;;;;;;;;;;;;;;;272:220::o;1127:394:1:-;1301:30;1222:20;:18;:20::i;:::-;1208:34;;:10;:34;;;1200:43;;;;;;;;1258:33;1284:6;1258:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1258:33:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:16;1343:6;1334:8;:16::i;:::-;1301:49;;1467:38;1502:2;1467:30;1494:2;1467:22;:26;;:30;;;;:::i;:::-;:34;;:38;;;;:::i;:::-;1438:26;:67;;;;1127:394;;;:::o;13483:69:7:-;;;;:::o;1978:199:1:-;2073:4;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;530:7:0;;;;;;;;;;;529:8;525:15;;;2109:40:1;;;;;;;;;2125:6;2109:40;;;;2140:7;2109:40;;;2089:9;:17;2099:6;2089:17;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;;2166:4;2159:11;;525:15:0;1978:199:1;;;;:::o;1001:111:10:-;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:5:10;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;232:20:8:-;;;;;;;;;;;;;:::o;1590:238:1:-;1638:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1725:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:96::i;:::-;;1590:238::o;513:38::-;;;;:::o;1274:103:10:-;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:29:10;1362:9;1343:18;:29::i;:::-;1274:103;:::o;203:380:9:-;263:9;495:1;489:2;:7;485:36;;;513:1;506:8;;;;485:36;536:2;531;:7;527:11;;561:2;555;551:1;:6;;;;;;;;:12;544:20;;;;;;577:1;570:8;;203:380;;;;;:::o;665:283::-;725:7;941:2;936;:7;;;;;;;;929:14;;665:283;;;;:::o;1238:128::-;1298:9;1324:2;1319;:7;1315:11;;1344:2;1339:1;:7;;1332:15;;;;;;1360:1;1353:8;;1238:128;;;;:::o;33241:112:7:-;33301:7;11260:1;11254:3;;;;;;;;;;;11246:15;;;11245:49;;;;11292:1;11265:25;11285:3;;;;;;;;;;;11265:11;:25::i;:::-;:28;11245:49;11242:101;;;11308:35;10976:1;11308:19;:35::i;:::-;;11242:101;11378:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11378:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11378:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11378:16:7;;;;;;;;;;;;;;;;11357:37;;11365:8;;;;;;;;;;;11357:37;;;;11354:92;;;11429:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11429:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11429:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11429:16:7;;;;;;;;;;;;;;;;11408:8;;:38;;;;;;;;;;;;;;;;;;11354:92;33326:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33326:20:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33326:20:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;33326:20:7;;;;;;;;;;;;;;;;33319:27;;33241:112;:::o;37425:92::-;37472:4;37495:15;37504:2;37508:1;37495:8;:15::i;:::-;37488:22;;37425:92;;;:::o;13972:306::-;14057:10;14078;11260:1;11254:3;;;;;;;;;;;11246:15;;;11245:49;;;;11292:1;11265:25;11285:3;;;;;;;;;;;11265:11;:25::i;:::-;:28;11245:49;11242:101;;;11308:35;10976:1;11308:19;:35::i;:::-;;11242:101;11378:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11378:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11378:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11378:16:7;;;;;;;;;;;;;;;;11357:37;;11365:8;;;;;;;;;;;11357:37;;;;11354:92;;;11429:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11429:16:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11429:16:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11429:16:7;;;;;;;;;;;;;;;;11408:8;;:38;;;;;;;;;;;;;;;;;;11354:92;14091:8;;;;;;;;;;;:17;;;14109:10;14091:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14091:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14091:29:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14091:29:7;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14091:29:7;;;;;;;;;;;;;;;;14078:42;;14164:6;14152:11;:18;14142:7;:28;14134:5;:36;14130:50;;;14179:1;14172:8;;;;;;14130:50;14224:8;;;;;;;;;;;:14;;;14245:5;14252:1;14255:10;14267:3;14224:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14224:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14224:47:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14224:47:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14224:47:7;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14224:47:7;;;;;;;;;;;;;;;;14217:54;;11457:1;13972:306;;;;;:::o;1512:171:10:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;33893:150:7:-;33955:10;34021:5;34009:18;34000:27;;33986:51;;;:::o;11604:1764::-;11667:4;11742:1;11686:55;11698:42;11686:11;:55::i;:::-;:57;11682:245;;;11796:42;11768:3;;:71;;;;;;;;;;;;;;;;;;11853:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;11912:4;11905:11;;;;11682:245;11996:1;11940:55;11952:42;11940:11;:55::i;:::-;:57;11936:254;;;12058:42;12030:3;;:71;;;;;;;;;;;;;;;;;;12115:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12175:4;12168:11;;;;11936:254;12259:1;12203:55;12215:42;12203:11;:55::i;:::-;:57;12199:249;;;12319:42;12291:3;;:71;;;;;;;;;;;;;;;;;;12376:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12433:4;12426:11;;;;12199:249;12517:1;12461:55;12473:42;12461:11;:55::i;:::-;:57;12457:253;;;12579:42;12551:3;;:71;;;;;;;;;;;;;;;;;;12636:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12695:4;12688:11;;;;12457:253;12779:1;12723:55;12735:42;12723:11;:55::i;:::-;:57;12719:201;;;12841:42;12813:3;;:71;;;;;;;;;;;;;;;;;;12905:4;12898:11;;;;12719:201;12989:1;12933:55;12945:42;12933:11;:55::i;:::-;:57;12929:200;;;13050:42;13022:3;;:71;;;;;;;;;;;;;;;;;;13114:4;13107:11;;;;12929:200;13198:1;13142:55;13154:42;13142:11;:55::i;:::-;:57;13138:202;;;13261:42;13233:3;;:71;;;;;;;;;;;;;;;;;;13325:4;13318:11;;;;13138:202;13356:5;13349:12;;11604:1764;;;;:::o;37557:588::-;37613:4;37629:20;37671:9;37694:13;37730:6;37658:2;37629:32;;37683:1;37671:13;;37710:5;37694:21;;37737:1;37730:8;;37725:357;37742:7;:14;37740:1;:16;37725:357;;;37795:2;37781:16;;:7;37789:1;37781:10;;;;;;;;;;;;;;;;;;;;:16;;;;;37780:38;;;;;37815:2;37801:16;;:7;37809:1;37801:10;;;;;;;;;;;;;;;;;;;;:16;;;;;37780:38;37776:295;;;37841:8;37837:102;;;37881:1;37875:2;:7;37871:49;;;37884:5;;37871:49;37916:4;;;;;;;;37837:102;37964:2;37956:10;;;;38011:2;37997:7;38005:1;37997:10;;;;;;;;;;;;;;;;;;;;37992:16;;;:21;37984:29;;;;37776:295;;;38052:2;38038:16;;:7;38046:1;38038:10;;;;;;;;;;;;;;;;;;;;:16;;;;38034:37;;;38067:4;38056:15;;38034:37;37776:295;37758:3;;;;;;;37725:357;;;38100:1;38095:2;:6;38091:26;;;38115:2;38111;:6;38103:14;;;;38091:26;38134:4;38127:11;;37557:588;;;;;;;;:::o;39316:118::-;39414:13;39390:21;:37;;;;;;;;;;;;:::i;:::-;;39316:118;:::o;408:2671:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"zeppelin-solidity/contracts/ownership/Ownable.sol\";\nimport \"zeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"../contracts/CircuitBreakable.sol\";\nimport \"../contracts/oraclizeAPI.sol\";\n\n/// @title LibraryDemo - This Dapp maintains employee salary database and calculated bonus\n/// @notice Library demo is smartcontract which demos usgae of ethereum packages and Oracle\ncontract LibraryDemo is Ownable, usingOraclize, CircuitBreakable {\n\n    using SafeMath for uint256;\n\n    uint public electricChargeAllowanceUSD;\n    mapping (uint256 => Employee) employees; \n    \n    struct Employee {\n        uint256 empId;\n        uint256  salary;\n    }\n  \n    event LogNewElectricChargePrice(string price);\n    event LogNewOraclizeQuery(string description);\n    \n    constructor() public {\n            update(); // First check at contract creation...\n        }\n\n    /// @notice  Oraclize query callback where the result of the query is obtained.\n    /// @dev Its 2 step process - sending the query and receiving back the result through call back\n    ///      and there will be delay in seconds. \n    function __callback(bytes32 myid, string memory result) public {\n        require(msg.sender == oraclize_cbAddress());\n        emit LogNewElectricChargePrice(result);\n        uint256 electricChargePriceUSD = parseInt(result); \n        //Calculate Allowance for 10 Kw/hr/day for 22 working days per month\n        electricChargeAllowanceUSD = electricChargePriceUSD.mul(10).mul(22);\n        \n    }\n    /// @notice  Oraclize query is constructed and emitted here\n    function update() public payable {\n        emit LogNewOraclizeQuery(\"Oraclize query was sent, standing by for the answer...\");\n        oraclize_query(\"URL\", \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric\");\n    }\n  \n  \n    /// @notice  add employee\n    /// @param  _empId Employee Id\n    /// @param _salary salary\n    /// @return  return successful addition\n    function addEmployee(uint256 _empId, uint256 _salary) onlyOwner stopInEmergency public returns(bool) {\n        employees[_empId] = Employee({empId:_empId, salary:_salary});\n        return true;\n    }\n\n    /// @notice calulate the bonus of the employee\n    /// @param _empId Employee Id\n    /// @param _percent Percentage for calculation\n    /// @return return calculated bonus value \n    function calulateBonus(uint256 _empId, uint256 _percent) onlyOwner stopInEmergency public view returns(uint256) {\n        require(employees[_empId].salary > 0);\n        uint256 bonus = employees[_empId].salary.mul(_percent).div(100);\n        return bonus;\n    }\n\n    /// @notice Add Calculated electric car allowance to Salary\n    /// @param _empId Employee Id\n    /// @return return calculated new Salary \n    function addElectriCarAllowanceToSalary(uint256 _empId) onlyOwner stopInEmergency public  returns(uint256) {\n        require(employees[_empId].salary > 0);\n        employees[_empId].salary = employees[_empId].salary.add(electricChargeAllowanceUSD);\n        return employees[_empId].salary;\n    }\n    \n}\n  ",
  "sourcePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/LibraryDemo.sol",
  "ast": {
    "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/LibraryDemo.sol",
    "exportedSymbols": {
      "LibraryDemo": [
        225
      ]
    },
    "id": 226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6949,
        "src": "25:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6863,
        "src": "85:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/CircuitBreakable.sol",
        "file": "../contracts/CircuitBreakable.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 33,
        "src": "141:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/oraclizeAPI.sol",
        "file": "../contracts/oraclizeAPI.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6743,
        "src": "185:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6948,
              "src": "432:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6948",
                "typeString": "contract Ownable"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6742,
              "src": "441:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6742",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "441:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "CircuitBreakable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "456:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CircuitBreakable_$32",
                "typeString": "contract CircuitBreakable"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "456:16:1"
          }
        ],
        "contractDependencies": [
          32,
          6742,
          6768,
          6948
        ],
        "contractKind": "contract",
        "documentation": "@title LibraryDemo - This Dapp maintains employee salary database and calculated bonus\n @notice Library demo is smartcontract which demos usgae of ethereum packages and Oracle",
        "fullyImplemented": true,
        "id": 225,
        "linearizedBaseContracts": [
          225,
          32,
          6768,
          6742,
          6948
        ],
        "name": "LibraryDemo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 47,
            "libraryName": {
              "contractScope": null,
              "id": 45,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6862,
              "src": "486:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6862",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "480:27:1",
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 49,
            "name": "electricChargeAllowanceUSD",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "513:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "513:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 53,
            "name": "employees",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "557:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
              "typeString": "mapping(uint256 => struct LibraryDemo.Employee)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "566:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "557:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                "typeString": "mapping(uint256 => struct LibraryDemo.Employee)"
              },
              "valueType": {
                "contractScope": null,
                "id": 51,
                "name": "Employee",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 58,
                "src": "577:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$58_storage_ptr",
                  "typeString": "struct LibraryDemo.Employee"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "LibraryDemo.Employee",
            "id": 58,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "empId",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "634:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "salary",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "657:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nodeType": "StructDefinition",
            "scope": 225,
            "src": "608:71:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 62,
            "name": "LogNewElectricChargePrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "719:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:14:1"
            },
            "src": "687:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "764:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "763:20:1"
            },
            "src": "738:46:1"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "815:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "829:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "829:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:1"
            },
            "scope": 225,
            "src": "794:93:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1190:331:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6963,
                            "src": "1208:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1208:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 83,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4706,
                            "src": "1222:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1208:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "1200:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:43:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1284:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 88,
                      "name": "LogNewElectricChargePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1258:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "EmitStatement",
                  "src": "1253:38:1"
                },
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "name": "electricChargePriceUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "1301:30:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1301:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1343:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 94,
                      "name": "parseInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5397,
                        5496
                      ],
                      "referencedDeclaration": 5397,
                      "src": "1334:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1301:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "electricChargeAllowanceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1438:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3232",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1502:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          "value": "22"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1494:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 99,
                              "name": "electricChargePriceUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1467:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6803,
                            "src": "1467:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6803,
                        "src": "1467:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1438:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:67:1"
                }
              ]
            },
            "documentation": "@notice  Oraclize query callback where the result of the query is obtained.\n @dev Its 2 step process - sending the query and receiving back the result through call back\n      and there will be delay in seconds. ",
            "id": 109,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1147:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1161:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:36:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:0:1"
            },
            "scope": 225,
            "src": "1127:394:1",
            "stateMutability": "nonpayable",
            "superFunction": 1641,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1623:205:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1658:56:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                        }
                      ],
                      "id": 112,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1638:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1638:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "EmitStatement",
                  "src": "1633:82:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e656c656374726963",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:73:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb37ce41460e4bc38d6f22d60556f186d5c91b92aed001e77084a10bfa1e199",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric\""
                        },
                        "value": "xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb37ce41460e4bc38d6f22d60556f186d5c91b92aed001e77084a10bfa1e199",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric\""
                        }
                      ],
                      "id": 116,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1738,
                        1780,
                        1826,
                        1870,
                        1913,
                        1958,
                        2007,
                        2054,
                        2101,
                        2150,
                        2203,
                        2254,
                        2291,
                        2331,
                        2374,
                        2414,
                        2459,
                        2507,
                        2558,
                        2606,
                        2659,
                        2715,
                        2774,
                        2830,
                        2891,
                        2955,
                        3022,
                        3086,
                        3155,
                        3227,
                        3302,
                        3374,
                        3421,
                        3470,
                        3523,
                        3574,
                        3611,
                        3651,
                        3694,
                        3734,
                        3779,
                        3827,
                        3878,
                        3926,
                        3979,
                        4035,
                        4094,
                        4150,
                        4211,
                        4275,
                        4342,
                        4406,
                        4475,
                        4547,
                        4622,
                        4694
                      ],
                      "referencedDeclaration": 1738,
                      "src": "1725:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:96:1"
                }
              ]
            },
            "documentation": "@notice  Oraclize query is constructed and emitted here",
            "id": 122,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:0:1"
            },
            "scope": 225,
            "src": "1590:238:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2079:98:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "employees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "2089:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                          "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_empId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2099:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2089:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_storage",
                        "typeString": "struct LibraryDemo.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_empId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2125:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_salary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2140:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "Employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2109:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Employee_$58_storage_ptr_$",
                          "typeString": "type(struct LibraryDemo.Employee storage pointer)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "empId",
                        "salary"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2109:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_memory",
                        "typeString": "struct LibraryDemo.Employee memory"
                      }
                    },
                    "src": "2089:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$58_storage",
                      "typeString": "struct LibraryDemo.Employee storage ref"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2166:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 134,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "2159:11:1"
                }
              ]
            },
            "documentation": "@notice  add employee\n @param  _empId Employee Id\n @param _salary salary\n @return  return successful addition",
            "id": 147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 128,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2032:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2032:9:1"
              },
              {
                "arguments": null,
                "id": 131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2042:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2042:15:1"
              }
            ],
            "name": "addEmployee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1999:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "name": "_salary",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2015:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1998:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2073:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2072:6:1"
            },
            "scope": 225,
            "src": "1978:199:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2478:149:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2496:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "2506:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2496:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2496:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2523:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2496:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "2488:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:37:1"
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2535:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2535:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2594:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "_percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2580:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "employees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "2551:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                  "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_empId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "2561:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2551:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$58_storage",
                                "typeString": "struct LibraryDemo.Employee storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "salary",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "2551:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6803,
                          "src": "2551:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2551:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6817,
                      "src": "2551:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2535:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "name": "bonus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "2615:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 159,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "2608:12:1"
                }
              ]
            },
            "documentation": "@notice calulate the bonus of the employee\n @param _empId Employee Id\n @param _percent Percentage for calculation\n @return return calculated bonus value ",
            "id": 185,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 153,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2423:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2423:9:1"
              },
              {
                "arguments": null,
                "id": 156,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 155,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2433:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2433:15:1"
              }
            ],
            "name": "calulateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2389:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "_percent",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2405:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2388:34:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2469:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2468:9:1"
            },
            "scope": 225,
            "src": "2366:261:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2884:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2902:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 199,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 198,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "2912:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2902:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2902:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2929:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2902:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "2894:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "employees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2941:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                            "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "_empId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "2951:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2941:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$58_storage",
                          "typeString": "struct LibraryDemo.Employee storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "salary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2941:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "electricChargeAllowanceUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "2997:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2968:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "2978:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2968:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2968:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6861,
                        "src": "2968:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2968:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "employees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3041:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                          "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "_empId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3051:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3041:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_storage",
                        "typeString": "struct LibraryDemo.Employee storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "salary",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 57,
                    "src": "3041:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "3034:31:1"
                }
              ]
            },
            "documentation": "@notice Add Calculated electric car allowance to Salary\n @param _empId Employee Id\n @return return calculated new Salary ",
            "id": 224,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2833:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:9:1"
              },
              {
                "arguments": null,
                "id": 192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2843:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2843:15:1"
              }
            ],
            "name": "addElectriCarAllowanceToSalary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2817:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2816:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2875:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:9:1"
            },
            "scope": 225,
            "src": "2777:295:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 226,
        "src": "408:2671:1"
      }
    ],
    "src": "0:3082:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/LibraryDemo.sol",
    "exportedSymbols": {
      "LibraryDemo": [
        225
      ]
    },
    "id": 226,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "zeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6949,
        "src": "25:59:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "zeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 36,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6863,
        "src": "85:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/CircuitBreakable.sol",
        "file": "../contracts/CircuitBreakable.sol",
        "id": 37,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 33,
        "src": "141:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/oraclizeAPI.sol",
        "file": "../contracts/oraclizeAPI.sol",
        "id": 38,
        "nodeType": "ImportDirective",
        "scope": 226,
        "sourceUnit": 6743,
        "src": "185:38:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 39,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6948,
              "src": "432:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6948",
                "typeString": "contract Ownable"
              }
            },
            "id": 40,
            "nodeType": "InheritanceSpecifier",
            "src": "432:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 41,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6742,
              "src": "441:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6742",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 42,
            "nodeType": "InheritanceSpecifier",
            "src": "441:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "CircuitBreakable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32,
              "src": "456:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CircuitBreakable_$32",
                "typeString": "contract CircuitBreakable"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "456:16:1"
          }
        ],
        "contractDependencies": [
          32,
          6742,
          6768,
          6948
        ],
        "contractKind": "contract",
        "documentation": "@title LibraryDemo - This Dapp maintains employee salary database and calculated bonus\n @notice Library demo is smartcontract which demos usgae of ethereum packages and Oracle",
        "fullyImplemented": true,
        "id": 225,
        "linearizedBaseContracts": [
          225,
          32,
          6768,
          6742,
          6948
        ],
        "name": "LibraryDemo",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 47,
            "libraryName": {
              "contractScope": null,
              "id": 45,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6862,
              "src": "486:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6862",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "480:27:1",
            "typeName": {
              "id": 46,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "499:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 49,
            "name": "electricChargeAllowanceUSD",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "513:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 48,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "513:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 53,
            "name": "employees",
            "nodeType": "VariableDeclaration",
            "scope": 225,
            "src": "557:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
              "typeString": "mapping(uint256 => struct LibraryDemo.Employee)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 50,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "566:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "557:29:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                "typeString": "mapping(uint256 => struct LibraryDemo.Employee)"
              },
              "valueType": {
                "contractScope": null,
                "id": 51,
                "name": "Employee",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 58,
                "src": "577:8:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Employee_$58_storage_ptr",
                  "typeString": "struct LibraryDemo.Employee"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "LibraryDemo.Employee",
            "id": 58,
            "members": [
              {
                "constant": false,
                "id": 55,
                "name": "empId",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "634:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 54,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "634:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 57,
                "name": "salary",
                "nodeType": "VariableDeclaration",
                "scope": 58,
                "src": "657:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 56,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "657:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Employee",
            "nodeType": "StructDefinition",
            "scope": 225,
            "src": "608:71:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 62,
            "name": "LogNewElectricChargePrice",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "indexed": false,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "719:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "718:14:1"
            },
            "src": "687:46:1"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 66,
            "name": "LogNewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 66,
                  "src": "764:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "764:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "763:20:1"
            },
            "src": "738:46:1"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "815:72:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 69,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122,
                      "src": "829:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "829:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "829:8:1"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "805:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "815:0:1"
            },
            "scope": 225,
            "src": "794:93:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 108,
              "nodeType": "Block",
              "src": "1190:331:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 81,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6963,
                            "src": "1208:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 82,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1208:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 83,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4706,
                            "src": "1222:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1222:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1208:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 80,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "1200:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1200:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:43:1"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1284:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 88,
                      "name": "LogNewElectricChargePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 62,
                      "src": "1258:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 91,
                  "nodeType": "EmitStatement",
                  "src": "1253:38:1"
                },
                {
                  "assignments": [
                    93
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 93,
                      "name": "electricChargePriceUSD",
                      "nodeType": "VariableDeclaration",
                      "scope": 109,
                      "src": "1301:30:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 92,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1301:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 97,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 95,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 77,
                        "src": "1343:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 94,
                      "name": "parseInt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5397,
                        5496
                      ],
                      "referencedDeclaration": 5397,
                      "src": "1334:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (string memory) returns (uint256)"
                      }
                    },
                    "id": 96,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1334:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1301:49:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 98,
                      "name": "electricChargeAllowanceUSD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1438:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3232",
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1502:2:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          },
                          "value": "22"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_22_by_1",
                            "typeString": "int_const 22"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "3130",
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1494:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 99,
                              "name": "electricChargePriceUSD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 93,
                              "src": "1467:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mul",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6803,
                            "src": "1467:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1467:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6803,
                        "src": "1467:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1467:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1438:67:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:67:1"
                }
              ]
            },
            "documentation": "@notice  Oraclize query callback where the result of the query is obtained.\n @dev Its 2 step process - sending the query and receiving back the result through call back\n      and there will be delay in seconds. ",
            "id": 109,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 75,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1147:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 109,
                  "src": "1161:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1161:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1146:36:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1190:0:1"
            },
            "scope": 225,
            "src": "1127:394:1",
            "stateMutability": "nonpayable",
            "superFunction": 1641,
            "visibility": "public"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1623:205:1",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4f7261636c697a65207175657279207761732073656e742c207374616e64696e6720627920666f722074686520616e737765722e2e2e",
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1658:56:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                        },
                        "value": "Oraclize query was sent, standing by for the answer..."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_16c323e807e72ee9cfe74e3b52d2baafe261f7d596c3ab8bac29ee93d1947977",
                          "typeString": "literal_string \"Oraclize query was sent, standing by for the answer...\""
                        }
                      ],
                      "id": 112,
                      "name": "LogNewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66,
                      "src": "1638:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1638:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 115,
                  "nodeType": "EmitStatement",
                  "src": "1633:82:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1740:5:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "786d6c2868747470733a2f2f7777772e6675656c65636f6e6f6d792e676f762f77732f726573742f6675656c707269636573292e6675656c5072696365732e656c656374726963",
                        "id": 118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1747:73:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fb37ce41460e4bc38d6f22d60556f186d5c91b92aed001e77084a10bfa1e199",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric\""
                        },
                        "value": "xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fb37ce41460e4bc38d6f22d60556f186d5c91b92aed001e77084a10bfa1e199",
                          "typeString": "literal_string \"xml(https://www.fueleconomy.gov/ws/rest/fuelprices).fuelPrices.electric\""
                        }
                      ],
                      "id": 116,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1738,
                        1780,
                        1826,
                        1870,
                        1913,
                        1958,
                        2007,
                        2054,
                        2101,
                        2150,
                        2203,
                        2254,
                        2291,
                        2331,
                        2374,
                        2414,
                        2459,
                        2507,
                        2558,
                        2606,
                        2659,
                        2715,
                        2774,
                        2830,
                        2891,
                        2955,
                        3022,
                        3086,
                        3155,
                        3227,
                        3302,
                        3374,
                        3421,
                        3470,
                        3523,
                        3574,
                        3611,
                        3651,
                        3694,
                        3734,
                        3779,
                        3827,
                        3878,
                        3926,
                        3979,
                        4035,
                        4094,
                        4150,
                        4211,
                        4275,
                        4342,
                        4406,
                        4475,
                        4547,
                        4622,
                        4694
                      ],
                      "referencedDeclaration": 1738,
                      "src": "1725:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1725:96:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "1725:96:1"
                }
              ]
            },
            "documentation": "@notice  Oraclize query is constructed and emitted here",
            "id": 122,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:0:1"
            },
            "scope": 225,
            "src": "1590:238:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 146,
              "nodeType": "Block",
              "src": "2079:98:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 135,
                        "name": "employees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "2089:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                          "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 136,
                        "name": "_empId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 124,
                        "src": "2099:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2089:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_storage",
                        "typeString": "struct LibraryDemo.Employee storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 139,
                          "name": "_empId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2125:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 140,
                          "name": "_salary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "2140:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "Employee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2109:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Employee_$58_storage_ptr_$",
                          "typeString": "type(struct LibraryDemo.Employee storage pointer)"
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "empId",
                        "salary"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2109:40:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_memory",
                        "typeString": "struct LibraryDemo.Employee memory"
                      }
                    },
                    "src": "2089:60:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Employee_$58_storage",
                      "typeString": "struct LibraryDemo.Employee storage ref"
                    }
                  },
                  "id": 143,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:60:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2166:4:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 134,
                  "id": 145,
                  "nodeType": "Return",
                  "src": "2159:11:1"
                }
              ]
            },
            "documentation": "@notice  add employee\n @param  _empId Employee Id\n @param _salary salary\n @return  return successful addition",
            "id": 147,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 129,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 128,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2032:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2032:9:1"
              },
              {
                "arguments": null,
                "id": 131,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 130,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2042:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2042:15:1"
              }
            ],
            "name": "addEmployee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "1999:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 126,
                  "name": "_salary",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2015:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2015:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1998:33:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "2073:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2073:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2072:6:1"
            },
            "scope": 225,
            "src": "1978:199:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2478:149:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 161,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2496:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 162,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 149,
                              "src": "2506:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2496:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2496:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2523:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2496:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 160,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "2488:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 168,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:37:1"
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "name": "bonus",
                      "nodeType": "VariableDeclaration",
                      "scope": 185,
                      "src": "2535:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2535:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 181,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2594:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 176,
                            "name": "_percent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151,
                            "src": "2580:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 171,
                                "name": "employees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "2551:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                  "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                                }
                              },
                              "id": 173,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 172,
                                "name": "_empId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 149,
                                "src": "2561:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2551:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Employee_$58_storage",
                                "typeString": "struct LibraryDemo.Employee storage ref"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "salary",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 57,
                            "src": "2551:24:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6803,
                          "src": "2551:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2551:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "div",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6817,
                      "src": "2551:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2551:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2535:63:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 182,
                    "name": "bonus",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 170,
                    "src": "2615:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 159,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "2608:12:1"
                }
              ]
            },
            "documentation": "@notice calulate the bonus of the employee\n @param _empId Employee Id\n @param _percent Percentage for calculation\n @return return calculated bonus value ",
            "id": 185,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": null,
                "id": 154,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 153,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2423:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2423:9:1"
              },
              {
                "arguments": null,
                "id": 156,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 155,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2433:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2433:15:1"
              }
            ],
            "name": "calulateBonus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2389:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2389:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "name": "_percent",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2405:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2405:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2388:34:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 158,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2469:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2469:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2468:9:1"
            },
            "scope": 225,
            "src": "2366:261:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2884:188:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 197,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2902:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 199,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 198,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "2912:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2902:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 200,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2902:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2929:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2902:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6966,
                        6967
                      ],
                      "referencedDeclaration": 6966,
                      "src": "2894:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2894:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:37:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 205,
                          "name": "employees",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2941:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                            "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 206,
                          "name": "_empId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "2951:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2941:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Employee_$58_storage",
                          "typeString": "struct LibraryDemo.Employee storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "salary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57,
                      "src": "2941:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 214,
                          "name": "electricChargeAllowanceUSD",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "2997:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 209,
                              "name": "employees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "2968:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                                "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                              }
                            },
                            "id": 211,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 210,
                              "name": "_empId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 187,
                              "src": "2978:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2968:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Employee_$58_storage",
                              "typeString": "struct LibraryDemo.Employee storage ref"
                            }
                          },
                          "id": 212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "salary",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57,
                          "src": "2968:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6861,
                        "src": "2968:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2968:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2941:83:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:83:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 218,
                        "name": "employees",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "3041:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Employee_$58_storage_$",
                          "typeString": "mapping(uint256 => struct LibraryDemo.Employee storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 219,
                        "name": "_empId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "3051:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3041:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Employee_$58_storage",
                        "typeString": "struct LibraryDemo.Employee storage ref"
                      }
                    },
                    "id": 221,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "salary",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 57,
                    "src": "3041:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 195,
                  "id": 222,
                  "nodeType": "Return",
                  "src": "3034:31:1"
                }
              ]
            },
            "documentation": "@notice Add Calculated electric car allowance to Salary\n @param _empId Employee Id\n @return return calculated new Salary ",
            "id": 224,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 190,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 189,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "2833:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:9:1"
              },
              {
                "arguments": null,
                "id": 192,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 191,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 25,
                  "src": "2843:15:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2843:15:1"
              }
            ],
            "name": "addElectriCarAllowanceToSalary",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 187,
                  "name": "_empId",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2817:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2817:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2816:16:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2875:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2874:9:1"
            },
            "scope": 225,
            "src": "2777:295:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 226,
        "src": "408:2671:1"
      }
    ],
    "src": "0:3082:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-01-23T19:42:12.634Z"
}