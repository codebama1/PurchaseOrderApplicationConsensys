{
  "contractName": "CircuitBreakable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "toggleContractActive",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260008060146101000a81548160ff021916908315150217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102268061006d6000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631385d24c146100515780638da5cb5b14610068575b600080fd5b34801561005d57600080fd5b506100666100bf565b005b34801561007457600080fd5b5061007d6101d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582065dc9fdb181da467127307d4f5ddf04edbb8b5005c146e219f8173fb8f7a46d30029",
  "deployedBytecode": "0x60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631385d24c146100515780638da5cb5b14610068575b600080fd5b34801561005d57600080fd5b506100666100bf565b005b34801561007457600080fd5b5061007d6101d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600060149054906101000a900460ff1615600060146101000a81548160ff021916908315150217905550565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a7230582065dc9fdb181da467127307d4f5ddf04edbb8b5005c146e219f8173fb8f7a46d30029",
  "sourceMap": "197:397:0:-;;;261:5;238:28;;;;;;;;;;;;;;;;;;;;214:10:8;206:5;;:18;;;;;;;;;;;;;;;;;;197:397:0;;;;;;",
  "deployedSourceMap": "197:397:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;272:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;272:220:0;;;;;;232:20:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;232:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;272:220:0;323:5:8;;;;;;;;;;;309:19;;:10;:19;;;288:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;478:7:0;;;;;;;;;;;477:8;467:7;;:18;;;;;;;;;;;;;;;;;;272:220::o;232:20:8:-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.24;\nimport \"../contracts/owned.sol\";\n\n/// @title Circuit Breakable\n/// @notice This contract only defines a modifier but does not use it: it will be used in derived contracts.\ncontract CircuitBreakable is owned {\n    bool private stopped = false;\n    function toggleContractActive() onlyOwner public {\n        // You can add an additional modifier that restricts stopping a contract to be based on another action, such as a vote of users\n        stopped = !stopped;\n    }\n\n    modifier stopInEmergency { if (!stopped) _; }\n    modifier onlyInEmergency { if (stopped) _; }\n}",
  "sourcePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/CircuitBreakable.sol",
  "ast": {
    "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/CircuitBreakable.sol",
    "exportedSymbols": {
      "CircuitBreakable": [
        32
      ]
    },
    "id": 33,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/owned.sol",
        "file": "../contracts/owned.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 33,
        "sourceUnit": 6769,
        "src": "25:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6768,
              "src": "226:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_owned_$6768",
                "typeString": "contract owned"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "226:5:0"
          }
        ],
        "contractDependencies": [
          6768
        ],
        "contractKind": "contract",
        "documentation": "@title Circuit Breakable\n @notice This contract only defines a modifier but does not use it: it will be used in derived contracts.",
        "fullyImplemented": true,
        "id": 32,
        "linearizedBaseContracts": [
          32,
          6768
        ],
        "name": "CircuitBreakable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 32,
            "src": "238:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "261:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "321:171:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "467:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "477:8:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "478:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "467:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 10,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "304:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "304:9:0"
              }
            ],
            "name": "toggleContractActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:0"
            },
            "scope": 32,
            "src": "272:220:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "523:20:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "529:8:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "530:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 23,
                  "nodeType": "IfStatement",
                  "src": "525:15:0",
                  "trueBody": {
                    "id": 22,
                    "nodeType": "PlaceholderStatement",
                    "src": "539:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:0"
            },
            "src": "498:45:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "573:19:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 27,
                    "name": "stopped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "579:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 29,
                  "nodeType": "IfStatement",
                  "src": "575:14:0",
                  "trueBody": {
                    "id": 28,
                    "nodeType": "PlaceholderStatement",
                    "src": "588:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "name": "onlyInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:0"
            },
            "src": "548:44:0",
            "visibility": "internal"
          }
        ],
        "scope": 33,
        "src": "197:397:0"
      }
    ],
    "src": "0:594:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/CircuitBreakable.sol",
    "exportedSymbols": {
      "CircuitBreakable": [
        32
      ]
    },
    "id": 33,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/bvenkatachalam/Documents/BlockChain/EthDevProgram/PurchaseOrder-Application/contracts/owned.sol",
        "file": "../contracts/owned.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 33,
        "sourceUnit": 6769,
        "src": "25:32:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "owned",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6768,
              "src": "226:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_owned_$6768",
                "typeString": "contract owned"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "226:5:0"
          }
        ],
        "contractDependencies": [
          6768
        ],
        "contractKind": "contract",
        "documentation": "@title Circuit Breakable\n @notice This contract only defines a modifier but does not use it: it will be used in derived contracts.",
        "fullyImplemented": true,
        "id": 32,
        "linearizedBaseContracts": [
          32,
          6768
        ],
        "name": "CircuitBreakable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 32,
            "src": "238:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 5,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "238:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 6,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "261:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "321:171:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "467:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "477:8:0",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 13,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "478:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "467:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "467:18:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 10,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6767,
                  "src": "304:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "304:9:0"
              }
            ],
            "name": "toggleContractActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "321:0:0"
            },
            "scope": 32,
            "src": "272:220:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "523:20:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 21,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "529:8:0",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "530:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 23,
                  "nodeType": "IfStatement",
                  "src": "525:15:0",
                  "trueBody": {
                    "id": 22,
                    "nodeType": "PlaceholderStatement",
                    "src": "539:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "523:0:0"
            },
            "src": "498:45:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 30,
              "nodeType": "Block",
              "src": "573:19:0",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 27,
                    "name": "stopped",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "579:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 29,
                  "nodeType": "IfStatement",
                  "src": "575:14:0",
                  "trueBody": {
                    "id": 28,
                    "nodeType": "PlaceholderStatement",
                    "src": "588:1:0"
                  }
                }
              ]
            },
            "documentation": null,
            "id": 31,
            "name": "onlyInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:0:0"
            },
            "src": "548:44:0",
            "visibility": "internal"
          }
        ],
        "scope": 33,
        "src": "197:397:0"
      }
    ],
    "src": "0:594:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.2",
  "updatedAt": "2019-02-09T17:10:41.452Z"
}